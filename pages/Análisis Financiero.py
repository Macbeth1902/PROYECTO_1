import pandas as pd
import numpy as np
import plotly.express as px
import matplotlib.pyplot as plt
import yfinance as yf
import datetime
import streamlit as st
import seaborn as sns
from scipy.stats import kurtosis, skew
from scipy.stats import norm, t
from utils import obtener_datos, rendimientos_logaritmicos

## Configuraci√≥n de la p√°gina
st.set_page_config(page_title="üìä An√°lisis Financiero", layout="wide")

st.title("üìà An√°lisis de datos de Google")
st.markdown("""
    <div style="font-size: 20px; font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; color: #333333; line-height: 1.6; background-color: #f0f8ff; padding: 20px; border-radius: 10px;">
        <p><strong>üìä Comportamiento hist√≥rico de la acci√≥n de Google (GOOGL)</strong></p>
        <p>En esta secci√≥n se presentar√° el comportamiento hist√≥rico de la acci√≥n de Google (GOOGL), con el objetivo de evaluar sus rendimientos y riesgos asociados. 
        Para ello, se utilizar√° como fuente de datos la plataforma <strong style="color: #0073e6;">Yahoo Finance</strong>, de la cual se extraer√° la informaci√≥n correspondiente 
        al precio de cierre diario de la acci√≥n desde el <strong>1 de enero de 2010</strong> hasta la fecha actual.</p>
    </div>
""", unsafe_allow_html=True)


## Hacemos la carga de datos, con spinner para el tiempo de espera
with st.spinner('‚è≥ Cargando datos...'):
    df = obtener_datos(['GOOGL'])
    df_rendimientos = rendimientos_logaritmicos(df)

## Calculamos las m√©tricas estad√≠sticas
media = df_rendimientos["Returns"].mean()
curtosis_valor = kurtosis(df_rendimientos["Returns"], fisher=True)
sesgo_valor = skew(df_rendimientos["Returns"])

st.subheader("üìä Estad√≠sticas de los rendimientos de GOOGLE")
col1, col2, col3 = st.columns(3)

with col1:
    st.metric(label="üìè Media", value=f"{media:.5f}")

with col2:
    st.metric(label="üìà Curtosis", value=f"{curtosis_valor:.5f}")

with col3:
    st.metric(label="üìâ Sesgo", value=f"{sesgo_valor:.5f}")
    

## Elaboramos una gr√°fica con los rendimientos diarios:
st.subheader("üìà Evoluci√≥n de los rendimientos de Google")

st.markdown("""
Para el c√°lculo de los rendimientos diarios, se opt√≥ por calcular los **Rendimientos Logar√≠tmicos**. 
            La elecci√≥n se debe a que, a comparaci√≥n de los rendimientos lineales, los rendimientos logar√≠tmicos suelen estar m√°s cerca de 
            adaptarse a una distribuci√≥n normal. Lo anterior facilita aplicar modelos estad√≠sticos que requieren dicha distribuci√≥n, como el 
            c√°lculo del VaR param√©trico. 
""", unsafe_allow_html=True)

fig, ax = plt.subplots(figsize=(10, 5))
ax.bar(df_rendimientos["Date"], df_rendimientos["Returns"], color="#7F7FFF", width=14, edgecolor='none')
ax.axhline(y=0, color='#ea314e', linestyle='--', linewidth=1.5)
ax.set_title("Evoluci√≥n de los rendimientos de Google")
ax.set_xlabel("Fecha")
ax.set_ylabel("Rendimiento Diario")
st.pyplot(fig)



## Elaboramos un histograma de los rendimientos diarios del activo
st.subheader("üìä Histograma de los rendimientos de Google")
fig, ax = plt.subplots(figsize=(10, 5))

# Usamos seaborn para hacer el histograma con kde (estimaci√≥n de densidad)
sns.histplot(df_rendimientos["Returns"], bins=50, kde=True, color="blue", edgecolor="black", ax=ax)

ax.axvline(x=media, color='#f84848', linestyle='--', label=f"Media: {media:.5f}")
ax.legend()
ax.set_title("Histograma de los rendimientos de Google")
ax.set_xlabel("Rendimiento Diario")
ax.set_ylabel("Frecuencia")
st.pyplot(fig)

st.markdown("""
    <div style="font-size: 20px; font-family: Arial, sans-serif; color: #333333; line-height: 1.6; background-color: #f0f0f0; padding: 20px; border-radius: 8px;">
        <p><strong>Notemos que el activo presenta una gran volatilidad:</strong> existen periodos donde los rendimientos son estables, y otros donde hay grandes fluctuaciones. Por ejemplo,
        entre 2020 y 2022 se aprecia un comportamiento extremo, lo que probablemente est√© asociado con el impacto de eventos globales como la pandemia del COVID-19.</p>
    </div>
""", unsafe_allow_html=True)
